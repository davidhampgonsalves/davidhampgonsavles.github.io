<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Heatmap.Js on David Hamp-Gonsalves</title>
    <link>https://davidhampgonsalves.github.io/tags/heatmap.js/index.xml</link>
    <description>Recent content in Heatmap.Js on David Hamp-Gonsalves</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <atom:link href="https://davidhampgonsalves.github.io/tags/heatmap.js/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Animated Javascript Heatmaps.js</title>
      <link>https://davidhampgonsalves.github.io/posts/animated-heatmaps.js/</link>
      <pubDate>Wed, 23 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://davidhampgonsalves.github.io/posts/animated-heatmaps.js/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve been working on a &lt;a href=&#34;http://www.crimeheatmap.ca&#34;&gt;crime heatmap animation&lt;/a&gt; lately and these are some tips for anyone else building something similar.&lt;/p&gt;

&lt;h2 id=&#34;heatmap-js&#34;&gt;Heatmap.js&lt;/h2&gt;

&lt;p&gt;For my animation I used a version of &lt;a href=&#34;https://github.com/pa7/heatmap.js/pull/35&#34;&gt;heatmap.js&lt;/a&gt; that was tweeked for animation by &lt;a href=&#34;http://alastair.is/&#34;&gt;alastair.is&lt;/a&gt;. The tweek slightly changes the look of the heatmaps but achieves a much better frame rate.&lt;/p&gt;

&lt;h2 id=&#34;the-animation&#34;&gt;The Animation&lt;/h2&gt;

&lt;p&gt;If you new to Javascript based animation you will want to read up on &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/window.requestAnimationFrame&#34;&gt;window.requestNextAnimationFrame()&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For a heatmap animation you need to push the current set of geo coardinates to the heatmap which corrispond with the the current animation progress.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Since the heatmaps are generated by overlaying all out points on a canvas and then colorizing them add and delete operations are slow since partial rendering isn&amp;rsquo;t supported and also because when adding new points you may result in a new maximum(darkest point) which would force an entire redraw. Because of this we set all our points at once.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For a smooth fade in effect I used a simple exponential curve algorithim using distance from cut off dates and current postion as inputs.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I was seeing errors with panning/zooming using Google Maps v3 and Heatmaps.js.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-data&#34;&gt;The Data&lt;/h2&gt;

&lt;p&gt;Since these animations usually cover a lot of data you will want to keep the syntax for each geo point minimal. In my case I compromised between readability and size buy using arrays rather then objects. I also converted my timestamps to just the day of the year since thats all the data was accurate to and then randomized the hour portion to distribute the data over the day.&lt;/p&gt;

&lt;h2 id=&#34;beautifying-data&#34;&gt;Beautifying Data&lt;/h2&gt;

&lt;p&gt;I think this idea gets missed when people build heatmaps since mostly all you are doing is making data pretty. More features wont help if the whole package isn&amp;rsquo;t beautiful.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
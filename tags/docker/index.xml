<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on David Hamp-Gonsalves</title>
    <link>https://davidhampgonsalves.github.io/tags/docker/index.xml</link>
    <description>Recent content in Docker on David Hamp-Gonsalves</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <atom:link href="https://davidhampgonsalves.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Docker Phusion Base</title>
      <link>https://davidhampgonsalves.github.io/docker-phusion-base/</link>
      <pubDate>Sun, 15 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://davidhampgonsalves.github.io/docker-phusion-base/</guid>
      <description>&lt;p&gt;I have been using the &lt;a href=&#34;https://github.com/phusion/passenger-docker&#34;&gt;phusion baseimage-docker&lt;/a&gt;. While in the past i&amp;rsquo;ve been mostly interested in making my docker images as small as possible with images like alpine-linux(busy-box based) the Phusion base breaks from this tradition by encouraging you to run multiple processes from a single container.&lt;/p&gt;

&lt;p&gt;While I was wary of this approach initially they make a good &lt;a href=&#34;https://github.com/phusion/baseimage-docker#docker_single_process&#34;&gt;argument&lt;/a&gt; for it and in practice I have been really enjoying working in this fashion.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The baseimage-docker uses RUnit rather then upstart and configuring services is well documented and straightforward.&lt;/li&gt;
&lt;li&gt;Cron works as you would expect and its usage isn&amp;rsquo;t discouraged.&lt;/li&gt;
&lt;li&gt;The container size isn&amp;rsquo;t tiny but since you have less of them its not a huge factor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For my project snap-spot I have my app server(http-kit), nginx, new-relic monitoring and a data cleanup task in the same container. For a project of my size this is a good fit and has simplified my deployment,&lt;/p&gt;

&lt;p&gt;The ability and convince of grouping processes  logically without the overhead of complex docker container orchestration. For small projects this is great.&lt;/p&gt;

&lt;p&gt;Finally I don&amp;rsquo;t find myself constantly &lt;code&gt;docker exec&lt;/code&gt;&amp;lsquo;ing into a pile of containers because the services can be logically grouped which makes development and maintenance more convenient.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>